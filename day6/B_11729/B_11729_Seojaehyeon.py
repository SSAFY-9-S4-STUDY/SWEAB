#####################################################
############## 너무 어려워서 구글링해버렸습니다 ###########
### 아직 이런 문제는 죽었다 깨어나도 다시 못풀듯 합니다 ######
#####################################################

def hanoi(N, bar1, bar2, bar3):
# N : int -- 원판의 개수
# bar1 : str -- 출발 기둥
# bar2 : str -- 보조 기둥
# bar3 : str -- 도착 기둥

    if N == 1:  # 원판의 개수 1개면, 출발기둥에서 바로 도착 기둥으로 이동
        print(bar1, bar3)

    else:  # 원판의 개수 1개 이상이면, 출발기둥에서 보조기둥으로 먼저 이동
        hanoi(N-1, bar1, bar3, bar2)
           # 그다음, 가장 큰 원판을 도착기둥으로 보내고, 보조기둥에서 도착기둥으로 원판 이동
        print(bar1, bar3)
        hanoi(N-1, bar2, bar1, bar3)

N = int(input())  # 원판의 개수 N (1 ≤ N ≤ 20)
print(2**N - 1)   # 이동 횟수 : 2ⁿ - 1
hanoi(N, 1, 2, 3)